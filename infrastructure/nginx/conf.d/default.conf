# Default site for SmartRelief

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h use_temp_path=off;

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream backend_upstream {
    server backend:3000;
    keepalive 32;
}

upstream ai_upstream {
    server ai-service:8000;
    keepalive 16;
}

server {
    listen 80;
    server_name _;

    # Body and buffer sizes (mirrors what we had in nginx.conf)
    client_max_body_size 50m;
    proxy_buffering on;
    proxy_buffers 16 16k;
    proxy_buffer_size 32k;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Serve static (if any) - adjust root if you add a frontend later
    # location / {
    #     root /usr/share/nginx/html;
    #     try_files $uri $uri/ /index.html;
    # }

    # Backend API
    location /api/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend_upstream$request_uri;
    }

    # OpenAPI docs (backend serves /openapi). Support both /openapi and /openapi/
    location = /openapi {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend_upstream/openapi;
    }
    location /openapi/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://backend_upstream$request_uri;
    }

    # WebSocket (if backend uses Socket.IO at /socket.io/)
    location /socket.io/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_pass http://backend_upstream;
    }

    # AI service
    location /ai/ {
        rewrite ^/ai/(.*)$ /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://ai_upstream;
    }

    # Health
    location = /health {
        return 200 '{"status":"ok","service":"nginx"}';
        add_header Content-Type application/json;
    }
}
